plot <- plot_grid(m, h, labels=c("A", "B"), ncol=1)
ggsave(plot, device=cairo_pdf, filename="/Users/aditharun/Desktop/kathy-temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
muscle
library(tidyverse)
library(readxl)
library(ggvenn)
library(cowplot)
dir <- "/Users/aditharun/Desktop/research/wilson/final-data"
heart <- read_excel(file.path(dir, "heart-new-tmt.xlsx"))
muscle <- read_excel(file.path(dir, "muscle-new-tmt.xlsx"))
#brain <- read_excel("brain-new-tmt.xlsx")
color <- function(x){
x <- x %>% mutate(expression=ifelse(`p-value` < 0.05 ,'p-value < 0.05','p-value >= 0.05'))
colnames(x)[1] <- "fold.change"
x
}
heart <- color(heart)
#brain <- color(brain)
muscle <- color(muscle)
cbbPalette <- c("#E69F00", "#000000", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
plot <- function(x, sample, show_legend){
textsize <- 16
titlesize <- 18
if (show_legend){
leg <- "bottom"
} else{
leg <- "none"
}
ggplot(data = x,
aes(x = fold.change,
y = -log10(`p-value`),
colour=expression)) +
geom_point(alpha=0.4, size=3.5) +
scale_color_manual(values=cbbPalette[1:3])+
xlim(c(-4.5, 4.5)) +
geom_vline(xintercept=c(-0.05,0.05),lty=2,col="grey70",lwd=0.3) +
geom_hline(yintercept = 1.301,lty=4,col="grey70",lwd=0.3) +
xlab("fold change (KO/WT)")+
ylab("-log10 p-value")+
ggtitle(sample) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, size=titlesize, family="Arial"),
legend.position=leg,
legend.title = element_blank()) +   theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
) + theme(
axis.title.x = element_text(size = textsize, family="Arial"),
axis.text.x = element_text(size = textsize-1, family="Arial"),
axis.title.y = element_text(size = textsize, family="Arial"),
axis.text.y= element_text(size=textsize-1, family="Arial"),
legend.text = element_text(size=textsize-1, family="Arial")
)
}
m <- plot(muscle, "Muscle", FALSE)
#b <- plot(brain, "Brain", FALSE)
h <- plot(heart, "Heart", TRUE)
plot <- plot_grid(m, h, labels=c("A", "B"), ncol=1)
ggsave(plot, device=cairo_pdf, filename="/Users/aditharun/Desktop/kathy-temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
plot
muscle
min(muscle$fold.change)
plot <- function(x, sample, show_legend){
textsize <- 16
titlesize <- 18
if (show_legend){
leg <- "bottom"
} else{
leg <- "none"
}
ggplot(data = x,
aes(x = fold.change,
y = -log10(`p-value`),
colour=expression)) +
geom_point(alpha=0.4, size=3.5) +
scale_color_manual(values=cbbPalette[1:3])+
xlim(c(0, 3)) +
geom_vline(xintercept=c(-0.95,0.95),lty=2,col="grey70",lwd=0.3) +
geom_hline(yintercept = 1.301,lty=4,col="grey70",lwd=0.3) +
xlab("fold change (KO/WT)")+
ylab("-log10 p-value")+
ggtitle(sample) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, size=titlesize, family="Arial"),
legend.position=leg,
legend.title = element_blank()) +   theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
) + theme(
axis.title.x = element_text(size = textsize, family="Arial"),
axis.text.x = element_text(size = textsize-1, family="Arial"),
axis.title.y = element_text(size = textsize, family="Arial"),
axis.text.y= element_text(size=textsize-1, family="Arial"),
legend.text = element_text(size=textsize-1, family="Arial")
)
}
m <- plot(muscle, "Muscle", FALSE)
#b <- plot(brain, "Brain", FALSE)
h <- plot(heart, "Heart", TRUE)
plot <- plot_grid(m, h, labels=c("A", "B"), ncol=1)
plot
plot <- function(x, sample, show_legend){
textsize <- 16
titlesize <- 18
if (show_legend){
leg <- "bottom"
} else{
leg <- "none"
}
ggplot(data = x,
aes(x = fold.change,
y = -log10(`p-value`),
colour=expression)) +
geom_point(alpha=0.4, size=3.5) +
scale_color_manual(values=cbbPalette[1:3])+
xlim(c(0, 3)) +
geom_vline(xintercept=c(0.95,1.05),lty=2,col="grey70",lwd=0.3) +
geom_hline(yintercept = 1.301,lty=4,col="grey70",lwd=0.3) +
xlab("fold change (KO/WT)")+
ylab("-log10 p-value")+
ggtitle(sample) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, size=titlesize, family="Arial"),
legend.position=leg,
legend.title = element_blank()) +   theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
) + theme(
axis.title.x = element_text(size = textsize, family="Arial"),
axis.text.x = element_text(size = textsize-1, family="Arial"),
axis.title.y = element_text(size = textsize, family="Arial"),
axis.text.y= element_text(size=textsize-1, family="Arial"),
legend.text = element_text(size=textsize-1, family="Arial")
)
}
m <- plot(muscle, "Muscle", FALSE)
#b <- plot(brain, "Brain", FALSE)
h <- plot(heart, "Heart", TRUE)
plot <- plot_grid(m, h, labels=c("A", "B"), ncol=1)
plot <- plot_grid(m, h, labels=NULL, ncol=1)
plot
plot <- function(x, sample, show_legend){
textsize <- 15
titlesize <- 18
if (show_legend){
leg <- "bottom"
} else{
leg <- "none"
}
ggplot(data = x,
aes(x = fold.change,
y = -log10(`p-value`),
colour=expression)) +
geom_point(alpha=0.4, size=3.5) +
scale_color_manual(values=cbbPalette[1:3])+
xlim(c(0, 3)) +
geom_vline(xintercept=c(0.95,1.05),lty=2,col="grey70",lwd=0.3) +
geom_hline(yintercept = 1.301,lty=4,col="grey70",lwd=0.3) +
xlab("fold change (KO/WT)")+
ylab("-log10 p-value")+
ggtitle(sample) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, size=titlesize, family="Arial"),
legend.position=leg,
legend.title = element_blank()) +   theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
) + theme(
axis.title.x = element_text(size = textsize, family="Arial"),
axis.text.x = element_text(size = textsize-1, family="Arial"),
axis.title.y = element_text(size = textsize, family="Arial"),
axis.text.y= element_text(size=textsize-1, family="Arial"),
legend.text = element_text(size=textsize-1, family="Arial")
)
}
m <- plot(muscle, "Muscle", FALSE)
#b <- plot(brain, "Brain", FALSE)
h <- plot(heart, "Heart", TRUE)
plot <- plot_grid(m, h, labels=NULL, ncol=1)
plot
ggsave(plot, device=cairo_pdf, filename="/Users/aditharun/Desktop/kathy-temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
ggsave(plot, filename="/Users/aditharun/Desktop/kathy-temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
ggsave(plot, device=pdf, filename="/Users/aditharun/Desktop/kathy-temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
ggsave(plot,  filename="/Users/aditharun/Desktop/kathy-temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
ggsave(plot,  filename='/Users/aditharun/Desktop/kathy-temp/volcanoes.pdf', width=12, height=4, units="in", dpi=320)
ggsave(plot,  filename='/Users/aditharun/Desktop/kathy-temp/volcanoes.pdf', width=12, height=4, units="ggsave(plot, filename="/Users/aditharun/Desktop/kathy_temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
in", dpi=320)
ggsave(plot, filename="/Users/aditharun/Desktop/kathy_temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
ggsave(plot, device="cairo_pdf", filename="/Users/aditharun/Desktop/kathy_temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
ggsave(plot, device='pdf', filename="/Users/aditharun/Desktop/kathy_temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
pdf("/Users/aditharun/Desktop/kathy_temp/volcanoes.pdf")
print(plot)
dev.off()
plot
ggsave(plot, device='cairo_pdf', filename="/Users/aditharun/Desktop/kathy_temp/volcanoes.pdf", width=12, height=4, units="in", dpi=320)
ggsave(plot, device='cairo_pdf', filename="volcanoes", width=12, height=4, units="in", dpi=320)
ggsave(plot, device='cairo_pdf', filename="volcanoes.pdf", width=12, height=4, units="in", dpi=320)
source("/Users/aditharun/Desktop/research/wilson/final-code/analysis-112620.R")
muscle.df <- expression_analysis("muscle", TRUE, "", "", FALSE, FALSE)
heart.df <- expression_analysis("heart", TRUE, "", "", FALSE, FALSE)
#brain.df <- expression_analysis("brain", TRUE, "", "", FALSE, FALSE)
#brain.df$type <- "Brain"
muscle.df$type <- "Muscle"
heart.df$type <- "Heart"
#x <- rbind(brain.df, muscle.df, heart.df)
x <- rbind(muscle.df, heart.df)
muscle.df <- expression_analysis("muscle", TRUE, "", "", FALSE, FALSE)
heart.df <- expression_analysis("heart", TRUE, "", "", FALSE, FALSE)
#brain.df <- expression_analysis("brain", TRUE, "", "", FALSE, FALSE)
source("/Users/aditharun/Desktop/research/wilson/final-code/analysis-112620.R")
muscle.df <- expression_analysis("muscle", TRUE, "", "", FALSE, FALSE)
heart.df <- expression_analysis("heart", TRUE, "", "", FALSE, FALSE)
sample <- "muscle"
fig <- TRUE
filen <- paste0(sample, "-filter-tmt.xlsx")
filen2 <- paste0(sample, "-excluded-tmt.xlsx")
render <- FALSE
access <- FALSE
reference <- read_excel("/Users/aditharun/Desktop/research/wilson/data/heart_tmt.xlsx", sheet=1)
reference
ref <- reference %>% dplyr::select(`Abundances (Grouped): KO`, `Abundances (Grouped): WT`, Description) %>% rename(ko=`Abundances (Grouped): KO`, wt=`Abundances (Grouped): WT`)
source("/Users/aditharun/Desktop/research/wilson/final-code/analysis-112620.R")
muscle.df <- expression_analysis("muscle", TRUE, "", "", FALSE, FALSE)
heart.df <- expression_analysis("heart", TRUE, "", "", FALSE, FALSE)
source("/Users/aditharun/Desktop/research/wilson/final-code/analysis-112620.R")
muscle.df <- expression_analysis("muscle", TRUE, "", "", FALSE, FALSE)
heart.df <- expression_analysis("heart", TRUE, "", "", FALSE, FALSE)
#brain.df <- expression_analysis("brain", TRUE, "", "", FALSE, FALSE)
#brain.df$type <- "Brain"
muscle.df$type <- "Muscle"
heart.df$type <- "Heart"
x <- rbind(muscle.df, heart.df)
df <- x %>% rename(pval=`p-value`) %>% mutate(filter.out=ifelse(grepl("ribosomal|keratin|mitochondri", Protein), "mitochondrial/ribosomal/keratin", "other")) %>% mutate(diff=komean-wtmean) %>% group_by(type) %>% mutate(index=1:n()) %>% ungroup()
textsize <- 16
titlesize <- 18
df
treatment_effect <- ggplot(df, aes(x=index, y=diff, color=filter.out)) + geom_point() +   geom_hline(yintercept = 0,col="black",lwd=0.8) + facet_wrap(~type, scale="free") + xlab("Protein Index") + ylab("Average KO Abundance - Average WT Abundance") + scale_color_manual(values=cbbPalette[c(4,7)]) + theme_bw()+
theme(plot.title = element_text(hjust = 0.5, size=titlesize),
legend.position="bottom",
legend.title = element_blank()) +   theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
) + theme(
axis.title.x = element_text(size = textsize),
axis.text.x = element_text(size = textsize-1),
axis.title.y = element_text(size = textsize),
axis.text.y= element_text(size=textsize-1),
legend.text = element_text(size=textsize-1), strip.text = element_text(size=textsize)
)
treatment_effect
df
df$type %>% head()
dflist <- split(df, df$type)
dflist
library(plotly)
dflist$Muscle
fig.muscle <- plot_ly(
dflist$Muscle, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out
)
fig.heart <- plot_ly(
dflist$Heart, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out
)
fig.muscle
fig.muscle %>% layout(xaxis = "te")
fig.muscle <- plot_ly(
dflist$Muscle, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out, yaxis=list(title="Average KO Abundance - Average WT Abundance"), xaxis=list(title="Protein Index")
)
fig.heart <- plot_ly(
dflist$Heart, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out,yaxis=list(title="Average KO Abundance - Average WT Abundance"), xaxis=list(title="Protein Index")
)
fig.heart
fig.muscle
fig.muscle <- plot_ly(
dflist$Muscle, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out) %>% layout( yaxis=list(title="Average KO Abundance - Average WT Abundance"), xaxis=list(title="Protein Index") )
fig.heart <- plot_ly(
dflist$Heart, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out) %>% layout(yaxis=list(title="Average KO Abundance - Average WT Abundance"), xaxis=list(title="Protein Index"))
fig.heart
fig.heart <- plot_ly(
dflist$Heart, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out) %>% layout(title="Heart", yaxis=list(title="Average KO Abundance - Average WT Abundance"), xaxis=list(title="Protein Index"))
fig.heart
fig.muscle <- plot_ly(
dflist$Muscle, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out) %>% layout(title="Muscle", yaxis=list(title="Average KO Abundance - Average WT Abundance"), xaxis=list(title="Protein Index") )
fig.heart <- plot_ly(
dflist$Heart, x = ~index, y = ~diff,
# Hover text:
text = ~Protein,
color = ~filter.out) %>% layout(title="Heart", yaxis=list(title="Average KO Abundance - Average WT Abundance"), xaxis=list(title="Protein Index"))
htmlwidgets::saveWidget(as_widget(fig.heart), "heart-treatment-effect.html")
htmlwidgets::saveWidget(as_widget(fig.muscle), "muscle-treatment-effect.html")
library(tidyverse)
r <- readRDS("/Users/aditharun/Desktop/plot.figure.rds")
r
r %>% as_tibble()
r$idx <- 1:50
par(c(1,2))
mfrow(c(1,2))
par(mfrow=c(1,2))
plot(r$idx, r$z)
plot(r$idx, r$acc)
plot(r$idx, r$acc, xlab="Healthy Sample #", ylab="Accuracy")
plot(r$idx, r$z, xlab="Healthy Sample #", ylab="P(Non-Hematopoetic)")
r
par(mfrow=c(1,2))
r <- readRDS("/Users/aditharun/Desktop/plot.figure.rds")
r
r$idx <- 1:44
plot(r$idx, r$acc, xlab="Healthy Sample #", ylab="Accuracy")
plot(r$idx, r$z, xlab="Healthy Sample #", ylab="P(Non-Hematopoetic)")
sum(r$z > .01)/44
t <- rpois(n=10000, lambda=5000)
rpois(10000, 5000)
t <- rpois(10000, 5000)
geom_density(t)
plot(density(T))
plot(density(t))
plot(density(t))
se.healthy
se
library(deconvolution.data)
se.healthy
assays(se.healthy)$plasma
assays(se.healthy)$plasma %>% rowSds()
library(tidyverse)
library(matrixStats)
assays(se.healthy)$plasma %>% rowSds()
dat <- data.frame(X = paste0("sample", 1:6),
c1 = runif(6),
c2 = runif(6),
c3 = runif(6))
# convert wide-to-long format
plotDat <- gather(dat, key = "key", value = "value", -X)
plotDat
dat
test <- assays(se.healthy)$plasma %>% rowSds()
test <- assays(se.healthy)$plasma %>% as_tibble()
test
test %>% mutate(idx=1:50) %>% pivot_longer(-idx, names_to="sample", values_to="coverage")
test %>% mutate(idx=1:5000) %>% pivot_longer(-idx, names_to="sample", values_to="coverage")
test2 <- test %>% mutate(idx=1:5000) %>% pivot_longer(-idx, names_to="sample", values_to="coverage")
plotDat
ggplot(test2, aes(sample,coverage)) + geom_boxplot()
ggplot(test2, aes(sample,coverage)) + geom_boxplot() + ylim(2000, 11000)
ggplot(test2, aes(sample,coverage)) + geom_boxplot() + ylim(2000, 11000) + scale_y_continuous(breaks=seq(3000, 9000, 500))
ggplot(test2, aes(sample,coverage)) + geom_boxplot() + scale_y_continuous(breaks=seq(3000, 9000, 500))
ggplot(test2, aes(sample,coverage)) + geom_boxplot() + scale_y_continuous(breaks=seq(3000, 9000, 500), limits=c(3000, 9000))
ggplot(test2, aes(sample,coverage)) + geom_boxplot() + scale_y_continuous(breaks=seq(3000, 9000, 500), limits=c(3000, 9000)) + theme_bw()
ggplot(test2, aes(sample,coverage)) + geom_boxplot() + scale_y_continuous(breaks=seq(3000, 9000, 500), limits=c(3000, 9000)) + theme_bw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
t <- rpois(10000, 6000)
plot(density(t))
t <- rnorm(10000, 6000, sqrt(1/.01))
plot(density(t))
t <- rnorm(10000, 6000, sqrt(1/1))
plot(density(t))
t <- rnorm(10000, 6000, sqrt(1/.001))
plot(density(t))
t <- rnorm(10000, 6000, sqrt(1/.00001))
plot(density(t))
test2
ggplot(test2 %>% filter(idx < 51), aes(idx,coverage)) + geom_boxplot()
test3 <- test2 %>% filter(idx < 51)
test3
ggplot(test3, aes(idx,coverage)) + geom_boxplot()
ggplot(test3, aes(as.factor(idx),coverage)) + geom_boxplot()
ggplot(test3, aes(as.factor(idx),coverage)) + geom_boxplot()ggplot(test3, aes(idx,coverage)) + geom_boxplot() + scale_y_continuous(breaks=seq(3000, 8000, 500), limits=c(3000, 8000)) + theme_bw() + theme(axis.title.x=element_blank(),
+                                                                                                                                                   axis.text.x=element_blank(),
+                                                                                                                                                   axis.ticks.x=element_blank())
ggplot(test3, aes(idx,coverage)) + geom_boxplot() + scale_y_continuous(breaks=seq(3000, 8000, 500), limits=c(3000, 8000)) + theme_bw() + theme(axis.title.x=element_blank(),
+                                                                                                                                                   axis.text.x=element_blank(),
+                                                                                                                                                   axis.ticks.x=element_blank())
ggplot(test3, aes(idx,coverage)) + geom_boxplot() + scale_y_continuous(breaks=seq(3000, 8000, 500), limits=c(3000, 8000)) + theme_bw() + theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot(test3, aes(as.factor(idx),coverage)) + geom_boxplot() + scale_y_continuous(breaks=seq(3000, 8000, 500), limits=c(3000, 8000)) + theme_bw() + theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())
test3 %>% group_by(idx)
test2 %>% group_by(idx) %>% summarize(m=median())
test2 %>% group_by(idx) %>% summarize(m=median(coverage))
test2 %>% group_by(idx) %>% summarize(m=median(coverage))test2 %>% group_by(idx) %>% summarize(m=median(coverage)) %>% mutate(l=m+2*sqrt(m), u=m-2*sqrt(m))
test2 %>% group_by(idx) %>% summarize(m=median(coverage)) %>% mutate(l=m+2*sqrt(m), u=m-2*sqrt(m))
r <- readRDS("/Users/aditharun/Desktop/bio.rds")
rs
r
r[1,50] %>% as.data.frame()
r[1:50,] %>% as.data.frame()
r
r %>% arrange(desc(abs(pc2)))
r %>% arrange(desc(abs(pc2))) %>% select(-gene_id) %>% slice(1:50) %>% as.data.frame()
library(deconvolution.data)
library(tidyverse)
se.healthy
colnames(se.healthy)
library(tidyverse)
r <- readRDS("CRC.model.estimates.rds")
r
r[,c(5,14)]
r[c(5,14),]
r <- readRDS("~/Documents/deconvolution2/output/mcmc/wgs_estimates2.Rmd/CGCRC296.rds")
r
library(tidyverse)
library(ggpubr)
library(cowplot)
cdata2 <- readRDS("CRC.model.estimates.rds")
colnames(cdata.full2) <- c("alpha", "buffy", "technical", "normal", "tumor", "z", "accuracy", "sample")
cdata.full2$sample <- as.character(cdata.full2$sample)
cdata.full3 <- cdata.full2 %>% as_tibble() %>% select(-sample) %>% mutate_if(is.factor,as.character) %>% mutate_if(is.character, as.numeric) %>% mutate(hematopoietic=buffy+technical) %>% select(-c(buffy, technical, alpha))
cdata.full3 <- cdata.full3 %>% mutate(idx=1:n()) %>% mutate(accuracy = accuracy/100)
cdata.full2 <- readRDS("CRC.model.estimates.rds")
colnames(cdata.full2) <- c("alpha", "buffy", "technical", "normal", "tumor", "z", "accuracy", "sample")
cdata.full2$sample <- as.character(cdata.full2$sample)
cdata.full3 <- cdata.full2 %>% as_tibble() %>% select(-sample) %>% mutate_if(is.factor,as.character) %>% mutate_if(is.character, as.numeric) %>% mutate(hematopoietic=buffy+technical) %>% select(-c(buffy, technical, alpha))
cdata.full3 <- cdata.full3 %>% mutate(idx=1:n()) %>% mutate(accuracy = accuracy/100)
cdata.full3
cdata.full3 %>% mutate(hematopoietic = ifelse(z = 0, 1, 0), normal = ifelse(z = 0, 0, normal), tumor = ifelse(z = 0, 0, tumor))
cdata.full3 %>% mutate(hematopoietic = ifelse(z = 0, 1, 0), normal = ifelse(z = 0, 0, normal), tumor = ifelse(z = 0, 0, tumor))
cdata.full3 %>% mutate(hematopoietic = ifelse(z = 0, 1, 0), normal = ifelse(z = 0, 0, normal), tumor = ifelse(z = 0, 0, tumor))
cdata.full3 %>% mutate(hematopoietic = ifelse(z = 0, 1, 0))
cdata.full3 %>% mutate(hematopoietic = ifelse(z == 0, 1, 0), normal = ifelse(z == 0, 0, normal), tumor = ifelse(z == 0, 0, tumor))
library(tidyverse)
library(ggpubr)
library(cowplot)
cdata.full2 <- readRDS("CRC.model.estimates.rds")
colnames(cdata.full2) <- c("alpha", "buffy", "technical", "normal", "tumor", "z", "accuracy", "sample")
cdata.full2$sample <- as.character(cdata.full2$sample)
cdata.full3 <- cdata.full2 %>% as_tibble() %>% select(-sample) %>% mutate_if(is.factor,as.character) %>% mutate_if(is.character, as.numeric) %>% mutate(hematopoietic=buffy+technical) %>% select(-c(buffy, technical, alpha))
cdata.full3 <- cdata.full3 %>% mutate(idx=1:n()) %>% mutate(accuracy = accuracy/100)
cdata.full3 <- cdata.full3 %>% mutate(hematopoietic = ifelse(z == 0, 1, 0), normal = ifelse(z == 0, 0, normal), tumor = ifelse(z == 0, 0, tumor))
legend <- theme(legend.justification = 'left', legend.position="bottom", legend.title = element_blank(), legend.key = element_rect(colour = "transparent", fill = "white") )
mytheme <- theme(axis.text=element_text(size=12), axis.title=element_text(size=15), legend.text = element_text(size=12), legend.title=element_text(size=15))
accuracy.plot <- ggplot(cdata.full3, aes(x=idx, y=accuracy)) + geom_point(size=2.7) + theme_bw() + ylab("Accuracy") + xlab("Cancer Sample #") + ylim(0, 1) + mytheme
prob.plot <- ggplot(cdata.full3, aes(x=idx, y=z)) + geom_point(size=2.7) + theme_bw() + ylab("P(non-hematopoietic)") + xlab("Cancer Sample #") + ylim(0, 1) + mytheme
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
bar.data <- cdata.full3 %>% select(-c(accuracy, z)) %>% pivot_longer(-idx,names_to="Tissue",values_to="values")
bar.plot <- ggplot(bar.data, aes(fill=Tissue, y=values, x=as.factor(idx))) + geom_bar(position="stack", stat="identity") + xlab("Cancer Sample #") + ylab("Tissue Contribution") + mytheme + scale_fill_manual(values=cbbPalette, labels=c("Hematopoietic", "Normal Colon", "Colon Tumor"))
bar.plot <- bar.plot +  guides(fill = guide_legend(nrow = 1)) + legend
part <- plot_grid(accuracy.plot, prob.plot, nrow=2, ncol=1, label_size=25)
plot_grid(bar.plot, part, ncol=2, label_size=25)
bar.data <- cdata.full3 %>% select(-c(accuracy, z)) %>% pivot_longer(-idx,names_to="Tissue",values_to="values")
bar.plot <- ggplot(bar.data, aes(fill=Tissue, y=values, x=as.factor(idx))) + geom_bar(position="stack", stat="identity") + xlab("Cancer Sample #") + ylab("Tissue Contribution") + mytheme + scale_fill_manual(values=cbbPalette, labels=c("Hematopoietic", "Normal Colon", "Colon Tumor"))
bar.plot <- bar.plot +  guides(fill = guide_legend(nrow = 1)) + legend + theme_bw()
part <- plot_grid(accuracy.plot, prob.plot, nrow=2, ncol=1, label_size=25)
plot_grid(bar.plot, part, ncol=2, label_size=25)
bar.data <- cdata.full3 %>% select(-c(accuracy, z)) %>% pivot_longer(-idx,names_to="Tissue",values_to="values") + theme_bw()
bar.plot <- ggplot(bar.data, aes(fill=Tissue, y=values, x=as.factor(idx))) + geom_bar(position="stack", stat="identity") + xlab("Cancer Sample #") + ylab("Tissue Contribution") + mytheme + scale_fill_manual(values=cbbPalette, labels=c("Hematopoietic", "Normal Colon", "Colon Tumor"))
bar.plot <- bar.plot +  guides(fill = guide_legend(nrow = 1)) + legend
part <- plot_grid(accuracy.plot, prob.plot, nrow=2, ncol=1, label_size=25)
plot_grid(bar.plot, part, ncol=2, label_size=25)
bar.data <- cdata.full3 %>% select(-c(accuracy, z)) %>% pivot_longer(-idx,names_to="Tissue",values_to="values")
bar.data
cdata.full2 <- readRDS("CRC.model.estimates.rds")
colnames(cdata.full2) <- c("alpha", "buffy", "technical", "normal", "tumor", "z", "accuracy", "sample")
cdata.full2$sample <- as.character(cdata.full2$sample)
cdata.full3 <- cdata.full2 %>% as_tibble() %>% select(-sample) %>% mutate_if(is.factor,as.character) %>% mutate_if(is.character, as.numeric) %>% mutate(hematopoietic=buffy+technical) %>% select(-c(buffy, technical, alpha))
cdata.full3 <- cdata.full3 %>% mutate(idx=1:n()) %>% mutate(accuracy = accuracy/100)
cdata.full3 <- cdata.full3 %>% mutate(hematopoietic = ifelse(z == 0, 1, hematopoietic), normal = ifelse(z == 0, 0, normal), tumor = ifelse(z == 0, 0, tumor))
legend <- theme(legend.justification = 'left', legend.position="bottom", legend.title = element_blank(), legend.key = element_rect(colour = "transparent", fill = "white") )
mytheme <- theme(axis.text=element_text(size=12), axis.title=element_text(size=15), legend.text = element_text(size=12), legend.title=element_text(size=15))
accuracy.plot <- ggplot(cdata.full3, aes(x=idx, y=accuracy)) + geom_point(size=2.7) + theme_bw() + ylab("Goodness of Fit") + xlab("Cancer Sample #") + ylim(0, 1) + mytheme
prob.plot <- ggplot(cdata.full3, aes(x=idx, y=z)) + geom_point(size=2.7) + theme_bw() + ylab("P(non-hematopoietic)") + xlab("Cancer Sample #") + ylim(0, 1) + mytheme
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
bar.data <- cdata.full3 %>% select(-c(accuracy, z)) %>% pivot_longer(-idx,names_to="Tissue",values_to="values")
bar.plot <- ggplot(bar.data, aes(fill=Tissue, y=values, x=as.factor(idx))) + geom_bar(position="stack", stat="identity") + xlab("Cancer Sample #") + ylab("Tissue Contribution") + mytheme + scale_fill_manual(values=cbbPalette, labels=c("Hematopoietic", "Normal Colon", "Colon Tumor"))
bar.plot <- bar.plot +  guides(fill = guide_legend(nrow = 1)) + legend
part <- plot_grid(accuracy.plot, prob.plot, nrow=2, ncol=1, label_size=25)
plot_grid(bar.plot, part, ncol=2, label_size=25)
bartheme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
bar.data <- cdata.full3 %>% select(-c(accuracy, z)) %>% pivot_longer(-idx,names_to="Tissue",values_to="values")
bar.plot <- ggplot(bar.data, aes(fill=Tissue, y=values, x=as.factor(idx))) + geom_bar(position="stack", stat="identity") + xlab("Cancer Sample #") + ylab("Tissue Contribution") + mytheme + scale_fill_manual(values=cbbPalette, labels=c("Hematopoietic", "Normal Colon", "Colon Tumor"))
bar.plot <- bar.plot +  guides(fill = guide_legend(nrow = 1)) + legend  + bartheme
part <- plot_grid(accuracy.plot, prob.plot, nrow=2, ncol=1, label_size=25)
plot_grid(bar.plot, part, ncol=2, label_size=25)
lm(iris$Sepal.Length~iris$Sepal.Width)$coefficients
setwd("~/Desktop/cda-paper/figures")
library(ggpubr)
library(tidyverse)
library(cowplot)
library(readxl)
##Load helper functions
source("functions_figures.R")
